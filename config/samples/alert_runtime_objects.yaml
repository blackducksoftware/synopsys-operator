apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap,AlertSecret"
  labels:
    operator.synopsys.com/group-id: "Alert"
    app: alert
    name: ${NAME}
  name: ${NAME}-alert
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    app: alert
    name: ${NAME}
  template:
    metadata:
      labels:
        app: alert
        name: ${NAME}
      name: ${NAME}-alert
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: ${NAME}-blackduck-alert-config
            - secretRef:
                name: ${NAME}-alert-secret
          image: docker.io/blackducksoftware/blackduck-alert:4.0.0
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://localhost:8443/alert/api/about
            failureThreshold: 5
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: blackduck-alert
          ports:
            - containerPort: ${ALERT_PORT}
              protocol: TCP
          resources:
            limits:
              memory: ${ALERT_MEM}
            requests:
              memory: ${ALERT_MEM}
          volumeMounts:
            - mountPath: /opt/blackduck/alert/alert-config
              name: dir-alert
      dnsPolicy: ClusterFirst
      volumes:
        - emptyDir: {}
          name: dir-alert

---
apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap"
  labels:
    operator.synopsys.com/group-id: "Cfssl"
    app: alert
    name: ${NAME}
  name: ${NAME}-cfssl
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    app: alert
    name: ${NAME}
  template:
    metadata:
      labels:
        app: alert
        name: ${NAME}
      name: ${NAME}-cfssl
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: ${NAME}-blackduck-alert-config
          image: docker.io/blackducksoftware/blackduck-cfssl:1.0.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - http://localhost:8888/api/v1/cfssl/scaninfo
            failureThreshold: 10
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: blackduck-cfssl
          ports:
            - containerPort: 8888
              protocol: TCP
          resources:
            limits:
              memory: ${CFSSL_MEM}
            requests:
              memory: ${CFSSL_MEM}
          volumeMounts:
            - mountPath: /etc/cfssl
              name: dir-cfssl
      dnsPolicy: ClusterFirst
      volumes:
        - emptyDir: {}
          name: dir-cfssl

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap,AlertSecret"
  labels:
    operator.synopsys.com/group-id: "Alert"
    app: alert
    name: ${NAME}
  name: ${NAME}-alert
  namespace: ${NAMESPACE}
spec:
  ports:
    - name: port-${ALERT_PORT}
      port: ${ALERT_PORT}
      protocol: TCP
      targetPort: ${ALERT_PORT}
  selector:
    app: alert
    name: ${NAME}
  type: ${SERVICE_TYPE}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap"
  labels:
    operator.synopsys.com/group-id: "Cfssl"
    app: alert
    name: ${NAME}
  name: ${NAME}-cfssl
  namespace: ${NAMESPACE}
spec:
  ports:
    - name: port-8888
      port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    app: alert
    name: ${NAME}
  type: ClusterIP

---
apiVersion: v1
data:
  ALERT_SERVER_PORT: "8443"
  PUBLIC_HUB_WEBSERVER_HOST: localhost
  PUBLIC_HUB_WEBSERVER_PORT: "443"
kind: ConfigMap
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: ""
  labels:
    operator.synopsys.com/group-id: "ConfigMap"
    app: alert
    name: ${NAME}
  name: ${NAME}-blackduck-alert-config
  namespace: ${NAMESPACE}

---
apiVersion: v1
data:
  ALERT_ENCRYPTION_GLOBAL_SALT: ""
  ALERT_ENCRYPTION_PASSWORD: ""
kind: Secret
metadata:
  annotations:
    # TODO: show what happens if a resource does not have this annotation
    operator.synopsys.com/group-dependencies: "ConfigMap"
  labels:
    # TODO: show what happens if a resource does not have this label
    operator.synopsys.com/group-id: "AlertSecret"
    app: alert
    name: ${NAME}
  name: ${NAME}-alert-secret
  namespace: ${NAMESPACE}
type: Opaque

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: ""
  labels:
    operator.synopsys.com/group-id: "AlertPvc"
    app: alert
    name: ${NAME}
  name: ${NAME}-alert-pvc
  namespace: ${NAMESPACE}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5G
# TODO Routes
# apiVersion: route.openshift.io/v1
# kind: Route
# metadata:
#   annotations:
#     openshift.io/host.generated: "true"
#   labels:
#     app: alert
#     component: route
#     name: ${NAME}
#   name: ${NAME}-alert
# spec:
#   host: demo-alert-demo.192.168.99.100.nip.io
#   port:
#     targetPort: port-8443
#   tls:
#     termination: passthrough
#   to:
#     kind: Service
#     name: ${NAME}-alert-alert
#     weight: 100
#   wildcardPolicy: None
