---
# Source: swip/templates/auth-server.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "auth-server"
  labels:    
    environment: "onprem"
    service: "auth-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "auth-server"
  labels:    
    environment: "onprem"
    service: "auth-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "auth-server"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "auth-server"
  labels:    
    environment: "onprem"
    service: "auth-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "auth-server"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "auth-server"
      labels:        
        environment: "onprem"
        service: "auth-server"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "auth-server"
      containers:
      - name: "auth-server"
        image: "gcr.io/snps-swip-staging/swip_auth-server:1.6.1835"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "auth-server"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: auth-server
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-auth-server"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_server_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_server_cert"        
        - name: "SMTP_HOST"
          valueFrom:
            secretKeyRef:
              name: "smtp"
              key: "host"
        - name: "SMTP_PORT"
          value: "25"
        - name: "SMTP_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "smtp"
              key: "passwd"
        - name: "SMTP_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "smtp"
              key: "username"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-server-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-server-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
      - name: "leader-election"
        image: "k8s.gcr.io/leader-elector:0.5"
        imagePullPolicy: "Always"
        args:
        - "--election=auth-server"
        - "--election-namespace=default"
        - "--http=0.0.0.0:4040"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 4040
        resources: 
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-server-key"
        secret:
          secretName: "auth-server-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_server_key"
      - name: "vault-server-cert"
        secret:
          secretName: "auth-server-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_server_cert"            
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "auth-server"
  labels:    
    environment: "onprem"
    service: "auth-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "auth-server"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/configs-service.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "configs-service"
  labels:    
    environment: "onprem"
    service: "configs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "configs-service"
  labels:    
    environment: "onprem"
    service: "configs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "configs-service"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "configs-service"
  labels:    
    environment: "onprem"
    service: "configs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "configs-service"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      name: "configs-service"
      labels:        
        environment: "onprem"
        service: "configs-service"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      serviceAccount: "configs-service"
      containers:
      - name: "configs-service"
        image: "gcr.io/snps-swip-staging/swip_configs-service:1.0.662"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "configs-service"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: configs-service
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-configs-service"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true
        ports:
        - containerPort: 8080
          protocol: "TCP"
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
      
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"      
            
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "configs-service"
  labels:    
    environment: "onprem"
    service: "configs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "configs-service"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/cos-server.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cos-server"
  labels:    
    environment: "onprem"
    service: "cos-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "cos-server"
  labels:    
    environment: "onprem"
    service: "cos-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "cos-server"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "cos-server"
  labels:    
    environment: "onprem"
    service: "cos-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "cos-server"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      name: "cos-server"
      labels:        
        environment: "onprem"
        service: "cos-server"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "cos-server"
      containers:
      - name: cos-server
        image: "gcr.io/snps-swip-staging/swip_cos-server:1.6.1835"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "cos-server"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: cos-server
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-cos-server"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:          
          limits:
            cpu: 750m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1500Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
            
      - name: "leader-election"
        image: "k8s.gcr.io/leader-elector:0.5"
        imagePullPolicy: "Always"
        args:
        - "--election=cos-server"
        - "--election-namespace=default"
        - "--http=0.0.0.0:4040"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 4040
        resources: 
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"      
                  
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "cos-server"
  labels:    
    environment: "onprem"
    service: "cos-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "cos-server"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/desktop-metrics-service.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "desktop-metrics-service"
  labels:    
    environment: "onprem"
    service: "desktop-metrics-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "desktop-metrics-service"
  labels:    
    environment: "onprem"
    service: "desktop-metrics-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "desktop-metrics-service"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "desktop-metrics-service"
  labels:    
    environment: "onprem"
    service: "desktop-metrics-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "desktop-metrics-service"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      name: "desktop-metrics-service"
      labels:        
        environment: "onprem"
        service: "desktop-metrics-service"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      serviceAccount: "desktop-metrics-service"
      containers:
      - name: "desktop-metrics-service"
        image: "gcr.io/snps-swip-staging/swip_desktop-metrics-service:1.0.277"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "desktop-metrics-service"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: desktop-metrics-service
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true
        ports:
        - containerPort: 8080
          protocol: "TCP"
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30      
      imagePullSecrets:
      - name: gcr-json-key
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "desktop-metrics-service"
  labels:    
    environment: "onprem"
    service: "desktop-metrics-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "desktop-metrics-service"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/download-server.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "download-server"
  labels:    
    environment: "onprem"
    service: "download-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "download-server"
  labels:    
    environment: "onprem"
    service: "download-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  type: "ClusterIP"
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: "download-server"
  selector:    
    service: "download-server"
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  # This name uniquely identifies the Deployment
  name: "download-server"
  labels:    
    environment: "onprem"
    service: "download-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "download-server"
  strategy:
    type: "Recreate"
  template:
    metadata:
      # Label is used as selector in the service.
      labels:        
        environment: "onprem"
        service: "download-server"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      # Refer to the secret created earlier
      volumes:
      - name: "tools-store"
        secret:
          # Name of the Secret created earlier
          secretName: "tools-store"
      containers:
      - name: "download-server"
        # Pulls the default Minio image from Docker Hub
        image: "gcr.io/snps-swip-staging/public/minio/minio:RELEASE.2019-02-14T00-21-45Z"
        args:
        - "gateway"
        - "gcs"
        - "snps-swip-staging"
        env:
        # Minio access key and secret key
        - name: "MINIO_BROWSER"
          value: "off"
        - name: "MINIO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              key: "access_key"
              name: "swip-tools-minio"
        - name: "MINIO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              key: "secret_key"
              name: "swip-tools-minio"
        # Google Cloud Service uses this variable
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/etc/credentials/credentials.json"
        ports:
        - containerPort: 9000
        # Mount the volume into the pod
        resources:          
          limits:
            cpu: 750m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: "tools-store"
          mountPath: "/etc/credentials"
          readOnly: true      
      imagePullSecrets:
      - name: gcr-json-key
---
# Source: swip/templates/issue-server.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "issue-server"
  labels:    
    environment: "onprem"
    service: "issue-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "issue-server"
  labels:    
    environment: "onprem"
    service: "issue-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "issue-server"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "issue-server"
  labels:    
    environment: "onprem"
    service: "issue-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "issue-server"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "issue-server"
      labels:        
        environment: "onprem"
        service: "issue-server"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "issue-server"
      containers:
      - name: "issue-server"
        image: "gcr.io/snps-swip-staging/swip_issue-server:1.6.1835"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: "TDS_LOOKUP"
          value: "10b78709-8156-447e-ac28-8669e461f0c9:code-analysis"        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "issue-server"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: issue-server
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-issue-server"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
            
      - name: "leader-election"
        image: "k8s.gcr.io/leader-elector:0.5"
        imagePullPolicy: "Always"
        args:
        - "--election=issue-server"
        - "--election-namespace=default"
        - "--http=0.0.0.0:4040"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 4040
        resources: 
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"      
                  
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "issue-server"
  labels:    
    environment: "onprem"
    service: "issue-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "issue-server"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/logs-service.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "logs-service"
  labels:    
    environment: "onprem"
    service: "logs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "logs-service"
  labels:    
    environment: "onprem"
    service: "logs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "logs-service"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "logs-service"
  labels:    
    environment: "onprem"
    service: "logs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "logs-service"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "logs-service"
      labels:        
        environment: "onprem"
        service: "logs-service"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "logs-service"
      containers:
      - name: "logs-service"
        image: "gcr.io/snps-swip-staging/swip_logs-service:1.5.2330"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "logs-service"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: logs-service
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-logs-service"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"      
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "logs-service"
  labels:    
    environment: "onprem"
    service: "logs-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "logs-service"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/pericles-swagger-ui.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "pericles-swagger-ui"
  labels:    
    environment: "onprem"
    service: "pericles-swagger-ui"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "pericles-swagger-ui"
  labels:    
    environment: "onprem"
    service: "pericles-swagger-ui"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "pericles-swagger-ui"
  ports:
  - name: "http"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "pericles-swagger-ui"
  labels:    
    environment: "onprem"
    service: "pericles-swagger-ui"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "pericles-swagger-ui"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:        
        environment: "onprem"
        service: "pericles-swagger-ui"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "pericles-swagger-ui"
      containers:
      - image: "gcr.io/snps-swip-staging/pericles-swagger-ui:0.0.18"
        imagePullPolicy: "IfNotPresent"
        name: "pericles-swagger-ui"
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: "/"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10      
      imagePullSecrets:
      - name: gcr-json-key
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30

---
# Source: swip/templates/taxonomy-server.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "taxonomy-server"
  labels:    
    environment: "onprem"
    service: "taxonomy-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "taxonomy-server"
  labels:    
    environment: "onprem"
    service: "taxonomy-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "taxonomy-server"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "taxonomy-server"
  labels:    
    environment: "onprem"
    service: "taxonomy-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "taxonomy-server"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "taxonomy-server"
      labels:        
        environment: "onprem"
        service: "taxonomy-server"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "taxonomy-server"
      containers:
      - name: "taxonomy-server"
        image: "gcr.io/snps-swip-staging/swip_taxonomy-server:1.6.1835"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "taxonomy-server"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: taxonomy-server
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-taxonomy-server"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        - name: "APPLICATION_INSIGHTS_IKEY" # TODO: get rid of me!!! (remove it from the dockerfile)
          value: "placeholder"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"            
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "taxonomy-server"
  labels:    
    environment: "onprem"
    service: "taxonomy-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "taxonomy-server"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/tds-code-analysis.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "tds-code-analysis"
  labels:    
    environment: "onprem"
    service: "tds-code-analysis"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "tds-code-analysis"
  labels:    
    environment: "onprem"
    service: "tds-code-analysis"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "tds-code-analysis"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "tds-code-analysis"
  labels:    
    environment: "onprem"
    service: "tds-code-analysis"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "tds-code-analysis"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "tds-code-analysis"
      labels:        
        environment: "onprem"
        service: "tds-code-analysis"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "tds-code-analysis"
      containers:
      - name: "tds-code-analysis"
        image: "gcr.io/snps-swip-staging/swip_tds-code-analysis:1.8.48"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "tds-code-analysis"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: tds-code-analysis
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-tds-code-analysis"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 3Gi
          requests:
            cpu: 500m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
            
      - name: "leader-election"
        image: "k8s.gcr.io/leader-elector:0.5"
        imagePullPolicy: "Always"
        args:
        - "--election=tds-code-analysis"
        - "--election-namespace=default"
        - "--http=0.0.0.0:4040"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 4040
        resources: 
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "tds-code-analysis-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "tds-code-analysis-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"      
                  
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "tds-code-analysis"
  labels:    
    environment: "onprem"
    service: "tds-code-analysis"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "tds-code-analysis"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/tools-service.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "tools-service"
  labels:    
    environment: "onprem"
    service: "tools-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "tools-service"
  labels:    
    environment: "onprem"
    service: "tools-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "tools-service"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "tools-service"
  labels:    
    environment: "onprem"
    service: "tools-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "tools-service"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "tools-service"
      labels:        
        environment: "onprem"
        service: "tools-service"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "tools-service"
      containers:
      - name: "tools-service"
        image: "gcr.io/snps-swip-staging/swip_tools-service:1.5.2407"
        imagePullPolicy: IfNotPresent
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "tools-service"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: tools-service
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-tools-service"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"        
        - name: "MINIO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: "swip-tools-minio"
              key: "access_key"
        - name: "MINIO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: "swip-tools-minio"
              key: "secret_key"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"      
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "tools-service"
  labels:    
    environment: "onprem"
    service: "tools-service"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "tools-service"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/triage-command-handler.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "triage-command-handler"
  labels:    
    environment: "onprem"
    service: "triage-command-handler"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "triage-command-handler"
  labels:    
    environment: "onprem"
    service: "triage-command-handler"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "triage-command-handler"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "triage-command-handler"
  labels:    
    environment: "onprem"
    service: "triage-command-handler"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "triage-command-handler"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "triage-command-handler"
      labels:        
        environment: "onprem"
        service: "triage-command-handler"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "triage-command-handler"
      containers:
      - name: "triage-command-handler"
        image: "gcr.io/snps-swip-staging/swip_triage-command-handler:1.6.1835"
        imagePullPolicy: IfNotPresent
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "triage-command-handler"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: triage-command-handler
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-triage-command-handler"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
      - name: "leader-election"
        image: "k8s.gcr.io/leader-elector:0.5"
        imagePullPolicy: "Always"
        args:
        - "--election=triage-command-handler"
        - "--election-namespace=default"
        - "--http=0.0.0.0:4040"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 4040
        resources: 
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"            
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "triage-command-handler"
  labels:    
    environment: "onprem"
    service: "triage-command-handler"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "triage-command-handler"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/triage-query.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "triage-query"
  labels:    
    environment: "onprem"
    service: "triage-query"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "triage-query"
  labels:    
    environment: "onprem"
    service: "triage-query"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "triage-query"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "triage-query"
  labels:    
    environment: "onprem"
    service: "triage-query"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "triage-query"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "triage-query"
      labels:        
        environment: "onprem"
        service: "triage-query"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "triage-query"
      containers:
      - name: "triage-query"
        image: "gcr.io/snps-swip-staging/swip_triage-query:1.6.1835"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "triage-query"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: triage-query
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-triage-query"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore"
        - name: "EVENT_STORE_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "swip-eventstore-creds"
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_WRITER_USERNAME"
          value: "writer"
        - name: "EVENT_STORE_WRITER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-writer-creds
              key: "password"        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_READER_USERNAME"
          value: "reader"
        - name: "EVENT_STORE_READER_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-reader-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        - name: "POSTGRES_HOST"
          value: "postgresql"
        - name: "POSTGRES_PORT"
          value: "5432"
        - name: "CLOUDSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "password"
        - name: "CLOUDSQL_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "cloudsql"
              key: "username"        
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
      - name: "leader-election"
        image: "k8s.gcr.io/leader-elector:0.5"
        imagePullPolicy: "Always"
        args:
        - "--election=triage-query"
        - "--election-namespace=default"
        - "--http=0.0.0.0:4040"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 4040
        resources: 
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"            
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "triage-query"
  labels:    
    environment: "onprem"
    service: "triage-query"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "triage-query"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/vinyl-server.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "vinyl-server"
  labels:    
    environment: "onprem"
    service: "vinyl-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "vinyl-server"
  labels:    
    environment: "onprem"
    service: "vinyl-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "vinyl-server"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
  - name: "admin"
    port: 8081
    targetPort: 8081
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "vinyl-server"
  labels:    
    environment: "onprem"
    service: "vinyl-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "vinyl-server"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "vinyl-server"
      labels:        
        environment: "onprem"
        service: "vinyl-server"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: "vinyl-server"
      containers:
      - name: "vinyl-server"
        image: "gcr.io/snps-swip-staging/swip_vinyl-server:1.6.1835"
        imagePullPolicy: IfNotPresent
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "vinyl-server"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: vinyl-server
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-vinyl-server"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"        
        - name: "MONGODB_HOST"
          value: "mongodb"
        - name: "MONGODB_PORT"
          value: "27017"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_client_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_client_cert"        
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-client-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-client-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          failureThreshold: 4
        livenessProbe:
          httpGet:
            path: "/version"
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 4
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-client-key"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_client_key"
      - name: "vault-client-cert"
        secret:
          secretName: "auth-client-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_client_cert"            
      imagePullSecrets:
      - name: gcr-json-key
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "vinyl-server"
  labels:    
    environment: "onprem"
    service: "vinyl-server"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "vinyl-server"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/web-core.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "web-core"
  labels:    
    environment: "onprem"
    service: "web-core"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "web-core"
  labels:    
    environment: "onprem"
    service: "web-core"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "web-core"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "web-core"
  labels:    
    environment: "onprem"
    service: "web-core"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "web-core"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "web-core"
      labels:        
        environment: "onprem"
        service: "web-core"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 100
      serviceAccount: "web-core"
      containers:
      - name: "web-core"
        image: "gcr.io/snps-swip-staging/web-core:1.7.863"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "web-core"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: web-core
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "JAEGER_SERVICE_NAME"
          value: "default-web-core"
        - name: "JAEGER_AGENT_HOST"
          valueFrom:
            fieldRef:
              fieldPath: "status.hostIP"
        - name: "JAEGER_AGENT_PORT"
          value: "6831"
        - name: "JAEGER_REPORTER_LOG_SPANS"
          value: "false"
        - name: "JAEGER_SAMPLER_TYPE"
          value: "const"
        - name: "JAEGER_SAMPLER_PARAM"
          value: "1"
        - name: "APP_URL"
          value: onprem.dev.polaris.synopsys.com
        - name: "API_NAMESPACE"
          value: "common/v0"
        - name: "API_ORIGIN"
          value: "/api"
        - name: "AUTH_ORIGIN"
          value: "/api/auth"
        - name: "CSRF_TOKEN"
          value: "csrf_token"
        - name: "ACCESS_TOKEN_EXP_SEC"
          value: "access_token_exp_sec"
        - name: "LOG_ORIGIN"
          value: "/api/logs/logging/web-core"
        
        - name: "REPORTING_URL"
          value: "https://onprem.dev.polaris.synopsys.com/reporting"
        
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File      
      imagePullSecrets:
      - name: gcr-json-key
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "web-core"
  labels:    
    environment: "onprem"
    service: "web-core"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: "extensions/v1beta1"
    kind: "Deployment"
    name: "web-core"
  metrics:
  - type: "Resource"
    resource:
      name: "memory"
      targetAverageUtilization: 75 
  - type: Resource
    resource:
      name: "cpu"
      targetAverageUtilization: 75

---
# Source: swip/templates/web-help.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "web-help"
  labels:    
    environment: "onprem"
    service: "web-help"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "web-help"
  labels:    
    environment: "onprem"
    service: "web-help"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  selector:    
    service: "web-help"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "web-help"
  labels:    
    environment: "onprem"
    service: "web-help"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
spec:
  replicas: 1
  selector:
    matchLabels:      
      service: "web-help"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: "web-help"
      labels:        
        environment: "onprem"
        service: "web-help"
        component: "swip"
        componentVersion: "0.0.4576"
        chart: "swip"
        chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 100
      serviceAccount: "web-help"
      containers:
      - name: "web-help"
        image: "gcr.io/snps-swip-staging/web-help:1.9.102"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "web-help"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: web-help
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: "APP_URL"
          value: "onprem.dev.polaris.synopsys.com"
        - name: "APP_PATH"
          value: "help"
        - name: "CSRF_TOKEN"
          value: "csrf_token"
        - name: "ACCESS_TOKEN_EXP_SEC"
          value: "access_token_exp_sec"
        - name: "LOG_ORIGIN"
          value: "/api/logs/logging/web-help"
        ports:
        - name: "http"
          protocol: "TCP"
          containerPort: 8080
        resources:          
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 100Mi
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"      
      imagePullSecrets:
      - name: gcr-json-key
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      terminationGracePeriodSeconds: 30

---
# Source: swip/templates/ingress.yaml

apiVersion: "extensions/v1beta1"
kind: "Ingress"
metadata:
  name: "release-name-ingress"
  namespace: "default"
  labels:    
    environment: "onprem"
    service: "swip-ingress"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/hsts: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/proxy-body-size: "1000m"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    nginx.ingress.kubernetes.io/enable-access-log: "true"
spec:
  tls:
  - hosts:
    - "onprem.dev.polaris.synopsys.com"
    secretName: "swip-ingress-tls"
  rules:
  - host: "onprem.dev.polaris.synopsys.com"
    http:
      paths:
      - path: "/api/auth/v0"
        backend:
          serviceName: "auth-server"
          servicePort: 8080
      - path: "/api/jobs/v0"
        backend:
          serviceName: "jobs-service"
          servicePort: 8080
      - path: "/api/logs/v0"
        backend:
          serviceName: "logs-service"
          servicePort: 8080
      - path: "/api/tools/v0"
        backend:
          serviceName: "tools-service"
          servicePort: 8080
      - path: "/api/checks/v0"
        backend:
          serviceName: "configs-service"
          servicePort: 8080
      - path: "/api/configs/v0"
        backend:
          serviceName: "configs-service"
          servicePort: 8080
      - path: "/api-docs/"
        backend:
          serviceName: "pericles-swagger-ui"
          servicePort: 8080
      - path: "/api/common"
        backend:
          serviceName: "cos-server"
          servicePort: 8080
      - path: "/api/code-analysis"
        backend:
          serviceName: "tds-code-analysis"
          servicePort: 8080
      - path: "/api/query"
        backend:
          serviceName: "issue-server"
          servicePort: 8080
      - path: "/api/issues"
        backend:
          serviceName: "issue-server"
          servicePort: 8080
      - path: "/api/taxonomy"
        backend:
          serviceName: "taxonomy-server"
          servicePort: 8080
      - path: "/api/triage-command"
        backend:
          serviceName: "triage-command-handler"
          servicePort: 8080
      - path: "/api/triage-query"
        backend:
          serviceName: "triage-query"
          servicePort: 8080
      - path: "/api/auth"
        backend:
          serviceName: "auth-server"
          servicePort: 8080
      - path: "/api/jobs"
        backend:
          serviceName: "jobs-service"
          servicePort: 8080
      - path: "/api/logs"
        backend:
          serviceName: "logs-service"
          servicePort: 8080
      - path: "/api/tools"
        backend:
          serviceName: "tools-service"
          servicePort: 8080
      - path: "/api/checks"
        backend:
          serviceName: "configs-service"
          servicePort: 8080
      - path: "/api/configs"
        backend:
          serviceName: "configs-service"
          servicePort: 8080
      - path: "/api/dms"
        backend:
          serviceName: "desktop-metrics-service"
          servicePort: 8080
      - path: "/api/dms/v0"
        backend:
          serviceName: "desktop-metrics-service"
          servicePort: 8080
      - path: "/upload"
        backend:
          serviceName: "upload-server"
          servicePort: 9000
      - path: "/download"
        backend:
          serviceName: "download-server"
          servicePort: 9000
      - path: "/api/vinyl"
        backend:
          serviceName: "vinyl-server"
          servicePort: 8080
      - path: "/"
        backend:
          serviceName: "web-core"
          servicePort: 8080
      - path: "/reporting"
        backend:
          serviceName: "rp-frontend"
          servicePort: 80
      - path: "/reporting/tps"
        backend:
          serviceName: "rp-tools-portfolio-service"
          servicePort: 60281
      - path: "/reporting/im"
        backend:
          serviceName: "rp-issue-manager"
          servicePort: 6888
      - path: "/reporting/rpps"
        backend:
          serviceName: "rp-portfolio-service"
          servicePort: 60289
      - path: "/reporting/rs"
        backend:
          serviceName: "rp-report-service"
          servicePort: 7979
      - path: "/reporting/swagger"
        backend:
          serviceName: "rp-swagger-doc"
          servicePort: 8765
      - path: "/reporting/pas"
        backend:
          serviceName: "rp-polaris-agent-service"
          servicePort: 7788
      - path: "/help"
        backend:
          serviceName: "web-help"
          servicePort: 8080

---
# Source: swip/templates/es-migrator.yaml

apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "es-migrator"
  labels:    
    environment: "onprem"
    service: "es-migrator"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: "es-migrator"
      labels:    
    environment: "onprem"
    service: "es-migrator"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      restartPolicy: "OnFailure"
      containers:
      - name: "es-migrator"
        image: "gcr.io/snps-swip-staging/swip_es-migrator:1.5.803"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "onprem"
        - name: SWIP_ROOT_DOMAIN
          value: "onprem.dev.polaris.synopsys.com"
        - name: SWIP_SERVICE_NAME
          value: "es-migrator"
        - name: NAMESPACE
          value: "default"
        - name: POLARIS_ENVIRONMENT_NAME
          value: onprem
        - name: POLARIS_ROOT_DOMAIN
          value: onprem.dev.polaris.synopsys.com
        - name: POLARIS_SERVICE_NAME
          value: es-migrator
        - name: KUBERNETES_NAMESPACE
          value: default        
        - name: "EVENT_STORE_ADDR"
          value: "eventstore.default.svc.cluster.local"
        - name: "EVENT_STORE_ADMIN_USERNAME"
          value: "admin"
        - name: "EVENT_STORE_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: swip-eventstore-admin-creds
              key: "password"        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://swip-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/mnt/vault/ca/vault_cacrt"
        - name: "VAULT_CLIENT_KEY"
          value: "/mnt/vault/key/vault_server_key"
        - name: "VAULT_CLIENT_CERT"
          value: "/mnt/vault/cert/vault_server_cert"
        volumeMounts:        
        - name: "vault-cacert"
          mountPath: "/mnt/vault/ca"
          readOnly: true
        - name: "vault-server-key"
          mountPath: "/mnt/vault/key"
          readOnly: true
        - name: "vault-server-cert"
          mountPath: "/mnt/vault/cert"
          readOnly: true
      volumes:      
      - name: "vault-cacert"
        secret:
          secretName: "vault-ca-certificate"
          items:
          - key: "tls.crt"
            path: "vault_cacrt"
      - name: "vault-server-key"
        secret:
          secretName: "auth-server-tls-certificate"
          items:
          - key: "tls.key"
            path: "vault_server_key"
      - name: "vault-server-cert"
        secret:
          secretName: "auth-server-tls-certificate"
          items:
          - key: "tls.crt"
            path: "vault_server_cert"      
      imagePullSecrets:
      - name: gcr-json-key

---
# Source: swip/templates/leader-election-rbac.yaml

apiVersion: "rbac.authorization.k8s.io/v1beta1"
kind: "Role"
metadata:
  namespace: "default"
  name: "leaderElector"
  labels:    
    environment: "onprem"
    service: "leaderElector"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
rules:
- apiGroups: ["", "extensions"]
  resources: ["endpoints"]
  verbs: ["create", "delete", "get", "patch", "update"]
- apiGroups: ["", "extensions"]
  resources: ["namespaces"]
  verbs: ["get"]
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  namespace: "default"
  name: "leaderElector"
  labels:    
    environment: "onprem"
    service: "leaderElector"
    component: "swip"
    componentVersion: "0.0.4576"
    chart: "swip"
    chartVersion: "0.0.4576"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "leaderElector"
subjects:
- kind: "ServiceAccount"
  namespace: "default"
  name: "triage-query"
- kind: "ServiceAccount"
  namespace: "default"
  name: "triage-command-handler"
- kind: "ServiceAccount"
  namespace: "default"
  name: "tds-code-analysis"
- kind: ServiceAccount
  namespace: "default"
  name: "tds-fuzz"
- kind: "ServiceAccount"
  namespace: "default"
  name: "tds-csv"
- kind: "ServiceAccount"
  namespace: "default"
  name: "tds-seeker"
- kind: "ServiceAccount"
  namespace: "default"
  name: "issue-server"
- kind: "ServiceAccount"
  namespace: "default"
  name: "cos-server"
- kind: "ServiceAccount"
  namespace: "default"
  name: "auth-server"
---
apiVersion: "v1"
kind: "Secret"
metadata:
  name: "cloudsql"
type: "Opaque"
data:
  reporting_db_username: "cG9zdGdyZXM="
  reporting_db_password: "cm9vdA=="
  username: "cG9zdGdyZXM="
  password: "cm9vdA=="
---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/environment_vars.yaml

---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/image_name.yaml

---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/image_pull_secrets.yaml

---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/labels.yaml

---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/resources.yaml

---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/selector.yaml

---
# Source: swip/charts/polaris-helmcharts-common/templates/tests/service-account.yaml

---
# Source: swip/templates/internal-ingress.yaml


---
# Source: swip/templates/jobfarm-autoscaler.yml


---
# Source: swip/templates/jobfarm-pushgateway.yaml


---
# Source: swip/templates/jobfarm-signalfx-metrics.yaml


---
# Source: swip/templates/jobfarm-statsd-exporter.yaml


---
# Source: swip/templates/jobs-controller-service.yaml


---
# Source: swip/templates/jobs-service.yaml


---
# Source: swip/templates/network_policy.yaml


---
# Source: swip/templates/organization-provision-job.yaml


---
# Source: swip/templates/tds-csv.yaml


---
# Source: swip/templates/tds-fuzz.yaml


---
# Source: swip/templates/tds-seeker.yaml


